<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이벤트 namespace -->
<mapper namespace="event">

	<resultMap type="eventModel" id="eventModelRes">
		<result property="event_no" column="event_no" />
		<result property="event_subject" column="event_subject" />
		<result property="event_content" column="event_content" />
		<result property="event_hit" column="event_hit" />
		<result property="event_start_date" column="event_start_date" />
		<result property="event_end_date" column="event_end_date" />
		<result property="event_category" column="event_category" />
		<result property="event_poster_file" column="event_poster_file" />
		<result property="event_content_file" column="event_content_file" />
	</resultMap>

	<sql id="select-all">
		select * from event
	</sql>

	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		select * from (select rownum as rn, a.* from (
	</sql>
	<sql id="pagingFooter">
		)a ) where rn between #{start} and #{end}
	</sql>

	<!-- 전체 검색 조건 -->
	<sql id="search">
		<choose>
			<!-- 검색 옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				where (event_subject like '%'||#{keyword}||'%' or
				event_content like '%'||#{keyword}||'%' or event_category like
				'%'||#{keyword}||'%')
			</when>

			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				where ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<!-- 부분 리스트 마다 검색 -->
	<sql id="search2">
		<choose>
			<when test="searchOption == 'all'">
				(event_subject like '%'||#{keyword}||'%' or
				event_content like '%'||#{keyword}||'%' or event_category like
				'%'||#{keyword}||'%')
			</when>

			<otherwise>
				(${searchOption} like '%'||#{keyword}||'%')
			</otherwise>
		</choose>
	</sql>

	<!-- select 쿼리문 정의 -->
	<!-- 게시글 목록 조회 및 검색 조회 및 이벤트 종료일 끝나지 않은거만  (1.영화) -->
	<select id="eventList_1" resultMap="eventModelRes">
	<![CDATA[  
		select * from (select rownum as rn, a.* from (
		select rownum, event_no, event_subject, event_content,
		event_start_date, event_end_date, event_hit, event_category,
		event_poster_file, event_content_file
		from event
		where ( to_char(sysdate,'YYYY.MM.dd') < to_date(event_end_date, 'YYYY.MM.dd') and
		event_category = '1' ) 
	 ]]>
		and
		<include refid="search2" />
		order by event_no desc
		)a ) where rn between #{start} and #{end}
	</select>

	<!-- 게시글 목록 조회 및 검색 조회 및 이벤트 종료일 끝나지 않은거만 (2.시대회/무대인사) -->
	<select id="eventList_2" resultMap="eventModelRes">
	<![CDATA[  
		select * from (select rownum as rn, a.* from (
		select rownum, event_no, event_subject, event_content,
		event_start_date, event_end_date, event_hit, event_category,
		event_poster_file, event_content_file
		from event
		where ( to_char(sysdate,'YYYY.MM.dd') < to_date(event_end_date, 'YYYY.MM.dd') and
		event_category = '2' )
	 ]]>
		and
		<include refid="search2" />
		order by event_no desc
		)a ) where rn between #{start} and #{end}
	</select>

	<!-- 게시글 목록 조회 및 검색 조회 및 이벤트 종료일 끝나지 않은거만 (3. 롯시NOW) -->
	<select id="eventList_3" resultMap="eventModelRes">
	<![CDATA[  
		select * from (select rownum as rn, a.* from (
		select rownum, event_no, event_subject, event_content,
		event_start_date, event_end_date, event_hit, event_category,
		event_poster_file, event_content_file
		from event
		where ( to_char(sysdate,'YYYY.MM.dd') < to_date(event_end_date, 'YYYY.MM.dd') and
		event_category = '3' )
	 ]]>
	 	and
		<include refid="search2" />
		order by event_no desc
		)a ) where rn between #{start} and #{end}
	</select>

	<!-- 게시글 목록 조회 및 검색 조회 및 이벤트 종료일 끝나지 않은거만 (4. 제휴할인) -->
	<select id="eventList_4" resultMap="eventModelRes">
	<![CDATA[  
		select * from (select rownum as rn, a.* from (
		select rownum, event_no, event_subject, event_content,
		event_start_date, event_end_date, event_hit, event_category,
		event_poster_file, event_content_file
		from event
		where ( to_char(sysdate,'YYYY.MM.dd') < to_date(event_end_date, 'YYYY.MM.dd') and
		event_category = '4' ) 
	 ]]>
	 	and
		<include refid="search2" />
		order by event_no desc
		)a ) where rn between #{start} and #{end}
	</select>
	
	<!-- 지난 이벤트 목록  -->
	<select id="eventEndList" resultMap="eventModelRes">
	<![CDATA[  
		select * from (select rownum as rn, a.* from (
		select rownum, event_no, event_subject, event_content,
		event_start_date, event_end_date, event_hit, event_category,
		event_poster_file, event_content_file
		from event
		where ( to_date(event_end_date, 'YYYY.MM.dd') < to_char(sysdate,'YYYY.MM.dd') )
		and (event_subject like '%'||#{keyword}||'%'
		or
		event_content like '%'||#{keyword}||'%')
		order by event_no desc
		)a ) where rn between #{start} and #{end}
	 ]]>
	</select>

	<!-- 게시글 레코드 갯수 -->
	<select id="count" resultType="int">
		select count(*) from event
		<!-- where 절을 include 태그로 삽입 -->
		<include refid="search" />
	</select>

	<!-- 해당 게시글 번호 -->
	<select id="eventGetSEQ" resultType="int">
		select event_no_seq.NEXTVAL
		from dual
	</select>

	<!-- 게시글 상세보기 -->
	<select id="eventView" resultMap="eventModelRes">
		<include refid="select-all" />
		where event_no = #{event_no}
	</select>

	<!-- insert 쿼리문 정의 -->
	<!-- 게시글 작성 -->
	<insert id="eventWrite" parameterType="eventModel">
		insert into event
		(event_no, event_subject, event_content, event_start_date,
		event_end_date, event_category, event_poster_file,
		event_content_file)
		values (event_no_seq.NEXTVAL,
		#{event_subject},
		#{event_content},
		#{event_start_date},
		#{event_end_date},
		#{event_category}, #{event_poster_file},
		#{event_content_file})
	</insert>

	<!-- update 쿼리문 정의 -->
	<!-- 게시글 조회수 증가 -->
	<update id="eventHitUpdate">
		update event
		set event_hit = event_hit + 1
		where
		event_no = #{event_no}
	</update>

	<!-- 게시글 수정 -->
	<update id="eventUpdate" parameterType="eventModel"> 
		update event 
		set 
		event_subject = #{event_subject}, event_content = #{event_content}, 
		event_start_date = #{event_start_date}, event_end_date = #{event_end_date}, 
		event_category = #{event_category}, event_poster_file = #{event_poster_file}, 
		event_content_file = #{event_content_file} 
		where 
		event_no = #{event_no} 
	</update>
	
	<!-- 게시글 삭제 -->
	<update id="eventDelete">
		delete from event 
		where event_no = #{event_no}
	</update>


</mapper>