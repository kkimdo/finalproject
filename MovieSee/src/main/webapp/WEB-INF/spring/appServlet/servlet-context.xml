<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 자동 Bean 등록 -->
	<context:component-scan base-package="movie" />
	
	<annotation-driven />

	<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <beans:bean id="loggerInterceptor" class="movie.common.logger.LoggerInterceptor"></beans:bean>
        </mvc:interceptor>
    </mvc:interceptors>

	<resources mapping="/resources/**" location="/resources/" />

	<!-- UrlBasedViewResolver : ViewResolver의 구현체로 특별한 맵핑 정보 없이 view 이름을 URL로 
		사용, View 이름과 실제 view 자원과의 이름이 같을 때 사용 
		만약, Controller에서 넘겨준 ModelAndView 값이 index라면, 
		밑에 정의에 따라 ViewResolver은 "/WEB-INF/views/index.jsp"를 찾는다. -->
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<!-- tiles.xml의 name을 우선순위 1 로 찾고 해당 사항이 없으면 아래에 jsp를 찾는다. -->

	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <beans:property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" /> -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- tiles -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
	</beans:bean>
	
	<!-- MultipartResolver 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000" />
        <beans:property name="maxInMemorySize" value="100000000" />
	</beans:bean>
	
</beans:beans>
